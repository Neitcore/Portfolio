        #////////////////////////////////////////////Imports////////////////////////////////////////////
try:
    from Tkinter import *
except ImportError:
    from tkinter import *
import serial
import serial.tools.list_ports
        #////////////////////////////////////////////Program////////////////////////////////////////////
class LEDControl(Frame):
    def __init__(self):
        #//////////////////////WindowConfigure//////////////////////
        Frame.__init__(self)
        self.master.configure(background='black')
        self.configure(background='black')
        self.master.title('LED Control Panel')
        self.master.resizable(width=False, height=False)
        self.grid()

        #//////////////////////Buttons//////////////////////
        self.butt2= Button(self, text='-',command=self.BrightChangeMinus,height = 2, width = 5)
        self.butt3= Button(self, text='+',command=self.BrightChangePlus,height = 2, width = 5)
        self.butt4= Button(self, text='Auto',command=self.BrightAuto,height = 1, width = 11)
        self.butt5=Button(self,text='Select',command=self.ColorChange)


        self.butt5.grid(row=8,column=6)
        self.butt2.grid(row=0,column=1,sticky=W)
        self.butt3.grid(row=0,column=1,sticky=E)
        self.butt4.grid(row=1,column=1)
        

        #//////////////////////Labels//////////////////////
        self.msg=Label(self, text='Choose your brightness: ',bg='black',fg='white')
        self.msg2=Label(self, text='Choose your color: ',bg='black',fg='white')
        self.void=Label(self, text='                  ',bg='black')
        
        self.void.grid(row=0,column=3)
        self.msg.grid(row=0,column=0)
        self.msg2.grid(row=0,column=4)
        

        #//////////////////////Var//////////////////////
        self.string=StringVar()

        
        #//////////////////////ColorSettings//////////////////////
        self.color1 = '#%02x%02x%02x' % (50, 237, 252)
        self.color2 = '#%02x%02x%02x' % (173, 51, 255)
        self.color3 = '#%02x%02x%02x' % (55, 253, 124)
        self.color4 = '#%02x%02x%02x' % (255, 255, 255)
        self.color5 = '#%02x%02x%02x' % (255, 0, 0)
        self.color6 = '#%02x%02x%02x' % (0, 0, 255)
        self.color7 = '#%02x%02x%02x' % (0, 255, 0)
        self.color8 = '#%02x%02x%02x' % (255, 0, 128)
        self.color9 = '#%02x%02x%02x' % (255, 203, 45)

        
        #//////////////////////ColorRadiobutton//////////////////////
        self.rad1=Radiobutton(self, text='                        ', variable= self.string, value='Color1',bg=self.color1)
        self.rad2=Radiobutton(self, text='                        ', variable= self.string, value='Color2',bg=self.color2)
        self.rad3=Radiobutton(self, text='                        ', variable= self.string, value='Color3',bg=self.color3)
        self.rad4=Radiobutton(self, text='                        ', variable= self.string, value='Color4',bg=self.color4)
        self.rad5=Radiobutton(self, text='                        ', variable= self.string, value='Color5',bg=self.color5)
        self.rad6=Radiobutton(self, text='                        ', variable= self.string, value='Color6',bg=self.color6)
        self.rad7=Radiobutton(self, text='                        ', variable= self.string, value='Color7',bg=self.color7)
        self.rad8=Radiobutton(self, text='                        ', variable= self.string, value='Color8',bg=self.color8)
        self.rad9=Radiobutton(self, text='                        ', variable= self.string, value='Color9',bg=self.color9)

        self.rad4.select()
        self.col=5
        
        self.rad1.grid(row=3,column=self.col)
        self.rad2.grid(row=1,column=self.col)
        self.rad3.grid(row=2,column=self.col)
        self.rad4.grid(row=0,column=self.col,sticky=S)
        self.rad5.grid(row=4,column=self.col)
        self.rad6.grid(row=5,column=self.col)
        self.rad7.grid(row=6,column=self.col)
        self.rad8.grid(row=7,column=self.col)
        self.rad9.grid(row=8,column=self.col)
        

        #//////////////////////SerialConnection//////////////////////
        ports = list(serial.tools.list_ports.comports())
        for p in ports:
           print p
        port = 'COM*'
        

        #//////////////////////Functions//////////////////////
    def ColorChange(self):
        ser = serial.Serial(port, 9600)
        ser.write(str(self.string.get()))
        ser.flushInput()
        ser.flushOutput()
        ser.close()
        return
    def BrightChangePlus(self):
        ser = serial.Serial(port, 9600)
        ser.flushInput()
        ser.flushOutput()
        ser.write('Plus')
        ser.close()
        return
    def BrightChangeMinus(self):
        ser = serial.Serial(port, 9600)
        ser.flushInput()
        ser.flushOutput()
        ser.write('Minus')
        ser.close()
        return
    def BrightAuto(self):
        ser = serial.Serial(port, 9600)
        ser.flushInput()
        ser.flushOutput()
        ser.write('Auto')
        ser.close()
        return

    
      #////////////////////////////////////////////ProgramLaunching////////////////////////////////////////////  
if __name__ == "__main__":
    app= LEDControl()
    app.mainloop()
